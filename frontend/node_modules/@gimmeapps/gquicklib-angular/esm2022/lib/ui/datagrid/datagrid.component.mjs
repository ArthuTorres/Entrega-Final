import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../button/button.component";
import * as i3 from "../layout/column/column.component";
import * as i4 from "../layout/row/row.component";
export class DatagridComponent {
    constructor() {
        this.data = [];
        this.onLoadRequested = new EventEmitter();
        this.onEditRequested = new EventEmitter();
        this.onDeleteRequested = new EventEmitter();
    }
    getProperty(obj, column) {
        const keys = column.path.split(".");
        let value = "";
        keys.forEach(key => value = (!value ? obj : value)[key]);
        if (column.formatFn)
            return column.formatFn(value);
        return value;
    }
    edit(item) {
        this.onEditRequested.emit(item.id);
    }
    askForDelete(item) {
        if (!confirm("Confirma a exclusão do registro selecionado? essa operação não pode ser desfeita!"))
            return;
        this.onDeleteRequested.emit(item.id);
    }
    nextPage() {
        if (!this.pagination)
            return;
        this.pagination.currentPage++;
        this.onLoadRequested.emit(this.pagination);
    }
    changePage(pageNumber) {
        if (!this.pagination)
            return;
        this.pagination.currentPage = pageNumber;
        this.onLoadRequested.emit(this.pagination);
    }
    previousPage() {
        if (!this.pagination)
            return;
        this.pagination.currentPage--;
        this.onLoadRequested.emit(this.pagination);
    }
    changePageSize($event) {
        if (!this.pagination)
            return;
        this.pagination.pageSize = $event;
        this.onLoadRequested.emit(this.pagination);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.0", ngImport: i0, type: DatagridComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.3.0", type: DatagridComponent, selector: "quick-datagrid", inputs: { data: "data", pagination: "pagination", options: "options" }, outputs: { onLoadRequested: "onLoadRequested", onEditRequested: "onEditRequested", onDeleteRequested: "onDeleteRequested" }, ngImport: i0, template: "<quick-column *ngIf=\"options\">\n    <table>\n        <thead>\n            <tr>\n                <th *ngFor=\"let column of options.columns\">{{column.label}}</th>\n                <th *ngIf=\"options.showAuditTimestamps\">Cadastrado em</th>\n                <th *ngIf=\"options.showAuditTimestamps\">\u00DAltima atualiza\u00E7\u00E3o</th>\n                <th *ngIf=\"options.canEdit || options.canDelete\" align=\"center\" width=\"60\">Op\u00E7\u00F5es</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of data\">\n                <td *ngFor=\"let column of options.columns\">{{getProperty(item, column)}}</td>\n                <td *ngIf=\"options.showAuditTimestamps\">{{item.created_at | date: 'dd/MM/yyyy HH:mm:ss'}}</td>\n                <td *ngIf=\"options.showAuditTimestamps\">{{item.updated_at | date: 'dd/MM/yyyy HH:mm:ss'}}</td>\n                <td *ngIf=\"options.canEdit || options.canDelete\" align=\"center\">\n                    <quick-row>\n                        <quick-button *ngIf=\"options.canEdit\" icon=\"edit\" hint=\"Editar registro\" componentSize=\"small\"\n                            componentStyle=\"grayed\" (onClick)=\"edit(item)\" />\n                        <quick-button *ngIf=\"options.canDelete\" icon=\"delete\" hint=\"Excluir registro\"\n                            componentSize=\"small\" componentStyle=\"grayed\" (onClick)=\"askForDelete(item)\"\n                            color=\"danger\" />\n                    </quick-row>\n                    <!-- <quick-row>\n                    </quick-row> -->\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"paginator\" *ngIf=\"pagination\">\n        <quick-row>\n            <!-- <quick-picker componentSize=\"small\" componentStyle=\"grayed\" [options]=\"pagination.pageSizes\"\n                [value]=\"pagination.pageSize\" (onChange)=\"changePageSize($event)\" /> -->\n            <span class=\"fx-1\"></span>\n            <quick-row *ngIf=\"pagination.pageCount && pagination.pageCount > 1\">\n                <quick-button componentSize=\"small\" icon=\"previous\" componentStyle=\"grayed\"\n                    *ngIf=\"pagination.currentPage > 1\" (onClick)=\"previousPage()\" />\n                <quick-button componentSize=\"small\" *ngFor=\"let pageNum of pagination.pages\" [text]=\"pageNum.toString()\"\n                    [componentStyle]=\"pagination.currentPage == pageNum ? 'flat' : 'grayed'\"\n                    (onClick)=\"changePage(pageNum)\" />\n                <quick-button componentSize=\"small\" icon=\"next\" componentStyle=\"grayed\"\n                    *ngIf=\"pagination.currentPage < pagination.pageCount\" (onClick)=\"nextPage()\" />\n            </quick-row>\n        </quick-row>\n    </div>\n</quick-column>", styles: [".paginator{padding:1rem 0}.paginator select{border:none}.paginator select:focus{outline:0}table{color:var(--gray-900);width:100%}table thead tr,table tbody tr,table tfoot tr{border-bottom-width:1px;border-bottom-style:dashed;border-bottom-color:var(--gray-300)}table thead tr td,table thead tr th,table tbody tr td,table tbody tr th,table tfoot tr td,table tfoot tr th{padding:1rem .5rem;text-wrap:nowrap}table thead tr td.text-right,table thead tr th.text-right,table tbody tr td.text-right,table tbody tr th.text-right,table tfoot tr td.text-right,table tfoot tr th.text-right{text-align:right}table thead,table tfoot{text-align:left;font-size:.8rem;color:var(--gray-600);text-transform:uppercase;font-weight:600}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i2.ButtonComponent, selector: "quick-button", inputs: ["icon", "text", "hint"], outputs: ["onClick"] }, { kind: "component", type: i3.ColumnComponent, selector: "quick-column" }, { kind: "component", type: i4.RowComponent, selector: "quick-row" }, { kind: "pipe", type: i1.DatePipe, name: "date" }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.0", ngImport: i0, type: DatagridComponent, decorators: [{
            type: Component,
            args: [{ selector: 'quick-datagrid', template: "<quick-column *ngIf=\"options\">\n    <table>\n        <thead>\n            <tr>\n                <th *ngFor=\"let column of options.columns\">{{column.label}}</th>\n                <th *ngIf=\"options.showAuditTimestamps\">Cadastrado em</th>\n                <th *ngIf=\"options.showAuditTimestamps\">\u00DAltima atualiza\u00E7\u00E3o</th>\n                <th *ngIf=\"options.canEdit || options.canDelete\" align=\"center\" width=\"60\">Op\u00E7\u00F5es</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr *ngFor=\"let item of data\">\n                <td *ngFor=\"let column of options.columns\">{{getProperty(item, column)}}</td>\n                <td *ngIf=\"options.showAuditTimestamps\">{{item.created_at | date: 'dd/MM/yyyy HH:mm:ss'}}</td>\n                <td *ngIf=\"options.showAuditTimestamps\">{{item.updated_at | date: 'dd/MM/yyyy HH:mm:ss'}}</td>\n                <td *ngIf=\"options.canEdit || options.canDelete\" align=\"center\">\n                    <quick-row>\n                        <quick-button *ngIf=\"options.canEdit\" icon=\"edit\" hint=\"Editar registro\" componentSize=\"small\"\n                            componentStyle=\"grayed\" (onClick)=\"edit(item)\" />\n                        <quick-button *ngIf=\"options.canDelete\" icon=\"delete\" hint=\"Excluir registro\"\n                            componentSize=\"small\" componentStyle=\"grayed\" (onClick)=\"askForDelete(item)\"\n                            color=\"danger\" />\n                    </quick-row>\n                    <!-- <quick-row>\n                    </quick-row> -->\n                </td>\n            </tr>\n        </tbody>\n    </table>\n    <div class=\"paginator\" *ngIf=\"pagination\">\n        <quick-row>\n            <!-- <quick-picker componentSize=\"small\" componentStyle=\"grayed\" [options]=\"pagination.pageSizes\"\n                [value]=\"pagination.pageSize\" (onChange)=\"changePageSize($event)\" /> -->\n            <span class=\"fx-1\"></span>\n            <quick-row *ngIf=\"pagination.pageCount && pagination.pageCount > 1\">\n                <quick-button componentSize=\"small\" icon=\"previous\" componentStyle=\"grayed\"\n                    *ngIf=\"pagination.currentPage > 1\" (onClick)=\"previousPage()\" />\n                <quick-button componentSize=\"small\" *ngFor=\"let pageNum of pagination.pages\" [text]=\"pageNum.toString()\"\n                    [componentStyle]=\"pagination.currentPage == pageNum ? 'flat' : 'grayed'\"\n                    (onClick)=\"changePage(pageNum)\" />\n                <quick-button componentSize=\"small\" icon=\"next\" componentStyle=\"grayed\"\n                    *ngIf=\"pagination.currentPage < pagination.pageCount\" (onClick)=\"nextPage()\" />\n            </quick-row>\n        </quick-row>\n    </div>\n</quick-column>", styles: [".paginator{padding:1rem 0}.paginator select{border:none}.paginator select:focus{outline:0}table{color:var(--gray-900);width:100%}table thead tr,table tbody tr,table tfoot tr{border-bottom-width:1px;border-bottom-style:dashed;border-bottom-color:var(--gray-300)}table thead tr td,table thead tr th,table tbody tr td,table tbody tr th,table tfoot tr td,table tfoot tr th{padding:1rem .5rem;text-wrap:nowrap}table thead tr td.text-right,table thead tr th.text-right,table tbody tr td.text-right,table tbody tr th.text-right,table tfoot tr td.text-right,table tfoot tr th.text-right{text-align:right}table thead,table tfoot{text-align:left;font-size:.8rem;color:var(--gray-600);text-transform:uppercase;font-weight:600}\n"] }]
        }], propDecorators: { data: [{
                type: Input
            }], pagination: [{
                type: Input
            }], options: [{
                type: Input
            }], onLoadRequested: [{
                type: Output
            }], onEditRequested: [{
                type: Output
            }], onDeleteRequested: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,