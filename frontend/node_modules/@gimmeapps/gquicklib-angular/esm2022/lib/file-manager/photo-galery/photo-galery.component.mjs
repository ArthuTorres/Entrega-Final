import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../../ui/button/button.component";
import * as i3 from "../../modals/shadowbox/shadowbox.component";
export class PhotoGaleryComponent {
    constructor() {
        this.disabled = false;
        this.onChange = new EventEmitter();
        this.onRemove = new EventEmitter();
        this.images = [];
        this.preview = 0;
    }
    onFileSelected(event) {
        const files = event.target.files;
        this.addImages(files);
    }
    onDragOver(event) {
        event.preventDefault();
    }
    onDrop(event) {
        event.preventDefault();
        const files = event.dataTransfer?.files || new FileList();
        this.addImages(files);
    }
    addImages(files) {
        const loadImage = (file) => {
            return new Promise(resolve => {
                const reader = new FileReader();
                reader.onload = (e) => {
                    resolve({ url: e.target.result, file });
                };
                reader.readAsDataURL(file);
            });
        };
        const tasks = [];
        for (let i = 0; i < files.length; i++) {
            const file = files[i];
            tasks.push(loadImage(file));
        }
        Promise.all(tasks).then(images => {
            this.images.push(...images);
            this.onChange.emit(this.images);
        });
    }
    removeImage(image) {
        const index = this.images.indexOf(image);
        if (index !== -1) {
            this.images.splice(index, 1);
            this.onRemove.emit(image);
            this.onChange.emit(this.images);
        }
    }
    openFilePicker() {
        this.fileInput?.nativeElement.click();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.3.0", ngImport: i0, type: PhotoGaleryComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "17.3.0", type: PhotoGaleryComponent, selector: "quick-photo-galery", inputs: { disabled: "disabled", images: "images" }, outputs: { onChange: "onChange", onRemove: "onRemove" }, viewQueries: [{ propertyName: "fileInput", first: true, predicate: ["fileInput"], descendants: true }], ngImport: i0, template: "<quick-shadowbox #shadowbox [images]=\"images\" [current]=\"preview\" />\n\n<div class=\"upload-images\">\n    @if(!disabled){<div class=\"drop-area\" (drop)=\"onDrop($event)\" (dragover)=\"onDragOver($event)\"\n        (click)=\"openFilePicker()\">\n        Arraste e solte as imagens aqui ou clique para selecionar arquivos\n        <input type=\"file\" multiple (change)=\"onFileSelected($event)\" #fileInput>\n    </div>}\n\n    <div class=\"thumbnails\">\n        <div *ngFor=\"let image of images; let i = index\" class=\"thumbnail\">\n            <img [src]=\"image.url\" alt=\"Imagem\" (click)=\"preview = i; shadowbox.show()\">\n            @if(!disabled){\n            <quick-button class=\"btn-delete\" icon=\"delete\" componentSize=\"small\" hint=\"Excluir imagem\" color=\"danger\"\n                [round]=\"true\" (onClick)=\"removeImage(image)\" />\n            }\n        </div>\n    </div>\n</div>", styles: [".upload-images{display:flex;flex-direction:column}.drop-area{border:2px dashed #ccc;padding:20px;cursor:pointer;font-weight:500;color:var(--gray-700);text-align:center;text-wrap:wrap}.thumbnails{display:flex;flex-wrap:wrap}.thumbnail{margin:10px;position:relative}.thumbnail img{max-width:100px;max-height:100px;cursor:pointer}input[type=file]{display:none}.btn-delete{position:absolute;margin:.2rem;right:0}\n"], dependencies: [{ kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "component", type: i2.ButtonComponent, selector: "quick-button", inputs: ["icon", "text", "hint"], outputs: ["onClick"] }, { kind: "component", type: i3.ShadowboxComponent, selector: "quick-shadowbox", inputs: ["images", "current"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.3.0", ngImport: i0, type: PhotoGaleryComponent, decorators: [{
            type: Component,
            args: [{ selector: 'quick-photo-galery', template: "<quick-shadowbox #shadowbox [images]=\"images\" [current]=\"preview\" />\n\n<div class=\"upload-images\">\n    @if(!disabled){<div class=\"drop-area\" (drop)=\"onDrop($event)\" (dragover)=\"onDragOver($event)\"\n        (click)=\"openFilePicker()\">\n        Arraste e solte as imagens aqui ou clique para selecionar arquivos\n        <input type=\"file\" multiple (change)=\"onFileSelected($event)\" #fileInput>\n    </div>}\n\n    <div class=\"thumbnails\">\n        <div *ngFor=\"let image of images; let i = index\" class=\"thumbnail\">\n            <img [src]=\"image.url\" alt=\"Imagem\" (click)=\"preview = i; shadowbox.show()\">\n            @if(!disabled){\n            <quick-button class=\"btn-delete\" icon=\"delete\" componentSize=\"small\" hint=\"Excluir imagem\" color=\"danger\"\n                [round]=\"true\" (onClick)=\"removeImage(image)\" />\n            }\n        </div>\n    </div>\n</div>", styles: [".upload-images{display:flex;flex-direction:column}.drop-area{border:2px dashed #ccc;padding:20px;cursor:pointer;font-weight:500;color:var(--gray-700);text-align:center;text-wrap:wrap}.thumbnails{display:flex;flex-wrap:wrap}.thumbnail{margin:10px;position:relative}.thumbnail img{max-width:100px;max-height:100px;cursor:pointer}input[type=file]{display:none}.btn-delete{position:absolute;margin:.2rem;right:0}\n"] }]
        }], propDecorators: { disabled: [{
                type: Input
            }], fileInput: [{
                type: ViewChild,
                args: ['fileInput']
            }], onChange: [{
                type: Output
            }], onRemove: [{
                type: Output
            }], images: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGhvdG8tZ2FsZXJ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2dxdWlja2xpYi1hbmd1bGFyL3NyYy9saWIvZmlsZS1tYW5hZ2VyL3Bob3RvLWdhbGVyeS9waG90by1nYWxlcnkuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvZ3F1aWNrbGliLWFuZ3VsYXIvc3JjL2xpYi9maWxlLW1hbmFnZXIvcGhvdG8tZ2FsZXJ5L3Bob3RvLWdhbGVyeS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFjLFlBQVksRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFVOUYsTUFBTSxPQUFPLG9CQUFvQjtJQUxqQztRQU1XLGFBQVEsR0FBRyxLQUFLLENBQUE7UUFHZixhQUFRLEdBQUcsSUFBSSxZQUFZLEVBQW9CLENBQUM7UUFDaEQsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFrQixDQUFDO1FBRS9DLFdBQU0sR0FBcUIsRUFBRSxDQUFDO1FBQ3ZDLFlBQU8sR0FBVyxDQUFDLENBQUM7S0FxRHJCO0lBbkRDLGNBQWMsQ0FBQyxLQUFVO1FBQ3ZCLE1BQU0sS0FBSyxHQUFhLEtBQUssQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO1FBQzNDLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDeEIsQ0FBQztJQUVELFVBQVUsQ0FBQyxLQUFnQjtRQUN6QixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7SUFDekIsQ0FBQztJQUVELE1BQU0sQ0FBQyxLQUFnQjtRQUNyQixLQUFLLENBQUMsY0FBYyxFQUFFLENBQUM7UUFDdkIsTUFBTSxLQUFLLEdBQWEsS0FBSyxDQUFDLFlBQVksRUFBRSxLQUFLLElBQUksSUFBSSxRQUFRLEVBQUUsQ0FBQztRQUNwRSxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxTQUFTLENBQUMsS0FBZTtRQUN2QixNQUFNLFNBQVMsR0FBRyxDQUFDLElBQVUsRUFBMkIsRUFBRTtZQUN4RCxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFO2dCQUMzQixNQUFNLE1BQU0sR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO2dCQUNoQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBTSxFQUFFLEVBQUU7b0JBQ3pCLE9BQU8sQ0FBQyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2dCQUMxQyxDQUFDLENBQUM7Z0JBQ0YsTUFBTSxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUM3QixDQUFDLENBQUMsQ0FBQTtRQUNKLENBQUMsQ0FBQTtRQUVELE1BQU0sS0FBSyxHQUE4QixFQUFFLENBQUE7UUFDM0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQztZQUN0QyxNQUFNLElBQUksR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDdEIsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQTtRQUM3QixDQUFDO1FBRUQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDL0IsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxNQUFNLENBQUMsQ0FBQTtZQUMzQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUE7UUFDakMsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQsV0FBVyxDQUFDLEtBQXFCO1FBQy9CLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3pDLElBQUksS0FBSyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUM7WUFDakIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDO1lBQzdCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFBO1lBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUNqQyxDQUFDO0lBQ0gsQ0FBQztJQUVELGNBQWM7UUFDWixJQUFJLENBQUMsU0FBUyxFQUFFLGFBQWEsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN4QyxDQUFDOzhHQTNEVSxvQkFBb0I7a0dBQXBCLG9CQUFvQiwrUUNWakMscTVCQWtCTTs7MkZEUk8sb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLG9CQUFvQjs4QkFLckIsUUFBUTtzQkFBaEIsS0FBSztnQkFDa0IsU0FBUztzQkFBaEMsU0FBUzt1QkFBQyxXQUFXO2dCQUVaLFFBQVE7c0JBQWpCLE1BQU07Z0JBQ0csUUFBUTtzQkFBakIsTUFBTTtnQkFFRSxNQUFNO3NCQUFkLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCwgVmlld0NoaWxkIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJbWFnZSB9IGZyb20gJy4uLy4uL3NoYXJlZC9tb2RlbHMvaW1hZ2UubW9kZWxzJztcblxuXG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ3F1aWNrLXBob3RvLWdhbGVyeScsXG4gIHRlbXBsYXRlVXJsOiAnLi9waG90by1nYWxlcnkuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybDogJy4vcGhvdG8tZ2FsZXJ5LmNvbXBvbmVudC5zY3NzJ1xufSlcbmV4cG9ydCBjbGFzcyBQaG90b0dhbGVyeUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpIGRpc2FibGVkID0gZmFsc2VcbiAgQFZpZXdDaGlsZCgnZmlsZUlucHV0JykgZmlsZUlucHV0PzogRWxlbWVudFJlZjxIVE1MSW5wdXRFbGVtZW50PjtcblxuICBAT3V0cHV0KCkgb25DaGFuZ2UgPSBuZXcgRXZlbnRFbWl0dGVyPFBhcnRpYWw8SW1hZ2U+W10+KCk7XG4gIEBPdXRwdXQoKSBvblJlbW92ZSA9IG5ldyBFdmVudEVtaXR0ZXI8UGFydGlhbDxJbWFnZT4+KCk7XG5cbiAgQElucHV0KCkgaW1hZ2VzOiBQYXJ0aWFsPEltYWdlPltdID0gW107XG4gIHByZXZpZXc6IG51bWJlciA9IDA7XG5cbiAgb25GaWxlU2VsZWN0ZWQoZXZlbnQ6IGFueSk6IHZvaWQge1xuICAgIGNvbnN0IGZpbGVzOiBGaWxlTGlzdCA9IGV2ZW50LnRhcmdldC5maWxlcztcbiAgICB0aGlzLmFkZEltYWdlcyhmaWxlcyk7XG4gIH1cblxuICBvbkRyYWdPdmVyKGV2ZW50OiBEcmFnRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICB9XG5cbiAgb25Ecm9wKGV2ZW50OiBEcmFnRXZlbnQpOiB2b2lkIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIGNvbnN0IGZpbGVzOiBGaWxlTGlzdCA9IGV2ZW50LmRhdGFUcmFuc2Zlcj8uZmlsZXMgfHwgbmV3IEZpbGVMaXN0KCk7XG4gICAgdGhpcy5hZGRJbWFnZXMoZmlsZXMpO1xuICB9XG5cbiAgYWRkSW1hZ2VzKGZpbGVzOiBGaWxlTGlzdCk6IHZvaWQge1xuICAgIGNvbnN0IGxvYWRJbWFnZSA9IChmaWxlOiBGaWxlKTogUHJvbWlzZTxQYXJ0aWFsPEltYWdlPj4gPT4ge1xuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuICAgICAgICByZWFkZXIub25sb2FkID0gKGU6IGFueSkgPT4ge1xuICAgICAgICAgIHJlc29sdmUoeyB1cmw6IGUudGFyZ2V0LnJlc3VsdCwgZmlsZSB9KTtcbiAgICAgICAgfTtcbiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoZmlsZSk7XG4gICAgICB9KVxuICAgIH1cblxuICAgIGNvbnN0IHRhc2tzOiBQcm9taXNlPFBhcnRpYWw8SW1hZ2U+PltdID0gW11cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGZpbGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBmaWxlID0gZmlsZXNbaV07XG4gICAgICB0YXNrcy5wdXNoKGxvYWRJbWFnZShmaWxlKSlcbiAgICB9XG5cbiAgICBQcm9taXNlLmFsbCh0YXNrcykudGhlbihpbWFnZXMgPT4ge1xuICAgICAgdGhpcy5pbWFnZXMucHVzaCguLi5pbWFnZXMpXG4gICAgICB0aGlzLm9uQ2hhbmdlLmVtaXQodGhpcy5pbWFnZXMpXG4gICAgfSk7XG4gIH1cblxuICByZW1vdmVJbWFnZShpbWFnZTogUGFydGlhbDxJbWFnZT4pOiB2b2lkIHtcbiAgICBjb25zdCBpbmRleCA9IHRoaXMuaW1hZ2VzLmluZGV4T2YoaW1hZ2UpO1xuICAgIGlmIChpbmRleCAhPT0gLTEpIHtcbiAgICAgIHRoaXMuaW1hZ2VzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICB0aGlzLm9uUmVtb3ZlLmVtaXQoaW1hZ2UpXG4gICAgICB0aGlzLm9uQ2hhbmdlLmVtaXQodGhpcy5pbWFnZXMpXG4gICAgfVxuICB9XG5cbiAgb3BlbkZpbGVQaWNrZXIoKSB7XG4gICAgdGhpcy5maWxlSW5wdXQ/Lm5hdGl2ZUVsZW1lbnQuY2xpY2soKTtcbiAgfVxuXG59XG4iLCI8cXVpY2stc2hhZG93Ym94ICNzaGFkb3dib3ggW2ltYWdlc109XCJpbWFnZXNcIiBbY3VycmVudF09XCJwcmV2aWV3XCIgLz5cblxuPGRpdiBjbGFzcz1cInVwbG9hZC1pbWFnZXNcIj5cbiAgICBAaWYoIWRpc2FibGVkKXs8ZGl2IGNsYXNzPVwiZHJvcC1hcmVhXCIgKGRyb3ApPVwib25Ecm9wKCRldmVudClcIiAoZHJhZ292ZXIpPVwib25EcmFnT3ZlcigkZXZlbnQpXCJcbiAgICAgICAgKGNsaWNrKT1cIm9wZW5GaWxlUGlja2VyKClcIj5cbiAgICAgICAgQXJyYXN0ZSBlIHNvbHRlIGFzIGltYWdlbnMgYXF1aSBvdSBjbGlxdWUgcGFyYSBzZWxlY2lvbmFyIGFycXVpdm9zXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiZmlsZVwiIG11bHRpcGxlIChjaGFuZ2UpPVwib25GaWxlU2VsZWN0ZWQoJGV2ZW50KVwiICNmaWxlSW5wdXQ+XG4gICAgPC9kaXY+fVxuXG4gICAgPGRpdiBjbGFzcz1cInRodW1ibmFpbHNcIj5cbiAgICAgICAgPGRpdiAqbmdGb3I9XCJsZXQgaW1hZ2Ugb2YgaW1hZ2VzOyBsZXQgaSA9IGluZGV4XCIgY2xhc3M9XCJ0aHVtYm5haWxcIj5cbiAgICAgICAgICAgIDxpbWcgW3NyY109XCJpbWFnZS51cmxcIiBhbHQ9XCJJbWFnZW1cIiAoY2xpY2spPVwicHJldmlldyA9IGk7IHNoYWRvd2JveC5zaG93KClcIj5cbiAgICAgICAgICAgIEBpZighZGlzYWJsZWQpe1xuICAgICAgICAgICAgPHF1aWNrLWJ1dHRvbiBjbGFzcz1cImJ0bi1kZWxldGVcIiBpY29uPVwiZGVsZXRlXCIgY29tcG9uZW50U2l6ZT1cInNtYWxsXCIgaGludD1cIkV4Y2x1aXIgaW1hZ2VtXCIgY29sb3I9XCJkYW5nZXJcIlxuICAgICAgICAgICAgICAgIFtyb3VuZF09XCJ0cnVlXCIgKG9uQ2xpY2spPVwicmVtb3ZlSW1hZ2UoaW1hZ2UpXCIgLz5cbiAgICAgICAgICAgIH1cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L2Rpdj4iXX0=